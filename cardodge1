<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Car Driving Game</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background: #333;
            overflow: hidden;
        }
        #gameCanvas {
            background: #000;
            border: 2px solid #fff;
        }
    </style>
</head>
<body>
    <canvas id="gameCanvas" width="300" height="600"></canvas>
    <script>
        const canvas = document.getElementById('gameCanvas');
        const ctx = canvas.getContext('2d');
        
        let car = { x: 130, y: 500, width: 40, height: 60, speed: 5 };
        let obstacles = [];
        let gameOver = false;
        let score = 0;

        function drawCar() {
            ctx.fillStyle = 'blue';
            ctx.fillRect(car.x, car.y, car.width, car.height);
        }

        function drawObstacles() {
            ctx.fillStyle = 'red';
            obstacles.forEach(obs => {
                ctx.fillRect(obs.x, obs.y, obs.width, obs.height);
            });
        }

        function moveCar() {
            document.addEventListener('keydown', (event) => {
                if (event.key === 'ArrowLeft' && car.x > 0) {
                    car.x -= car.speed;
                } else if (event.key === 'ArrowRight' && car.x < canvas.width - car.width) {
                    car.x += car.speed;
                }
            });
        }

        function generateObstacle() {
            const obstacleWidth = 50;
            const randomX = Math.floor(Math.random() * (canvas.width - obstacleWidth));
            obstacles.push({ x: randomX, y: -50, width: obstacleWidth, height: 50, speed: 3 });
        }

        function moveObstacles() {
            obstacles.forEach((obs, index) => {
                obs.y += obs.speed;
                if (obs.y > canvas.height) {
                    obstacles.splice(index, 1);
                    score += 10;
                }
            });
        }

        function detectCollision() {
            obstacles.forEach((obs) => {
                if (
                    car.x < obs.x + obs.width &&
                    car.x + car.width > obs.x &&
                    car.y < obs.y + obs.height &&
                    car.y + car.height > obs.y
                ) {
                    gameOver = true;
                }
            });
        }

        function updateGame() {
            if (gameOver) {
                ctx.fillStyle = 'white';
                ctx.font = '30px Arial';
                ctx.fillText('Game Over', 80, canvas.height / 2);
                ctx.font = '20px Arial';
                ctx.fillText(`Score: ${score}`, 110, canvas.height / 2 + 40);
                return;
            }

            ctx.clearRect(0, 0, canvas.width, canvas.height);
            drawCar();
            drawObstacles();
            moveObstacles();
            detectCollision();

            if (Math.random() < 0.02) generateObstacle();

            ctx.fillStyle = 'white';
            ctx.font = '20px Arial';
            ctx.fillText(`Score: ${score}`, 10, 30);

            requestAnimationFrame(updateGame);
        }

        moveCar();
        updateGame();
    </script>
</body>
</html>
